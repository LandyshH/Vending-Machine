version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - EDGE_PORT=4566
      - DATA_DIR=/tmp/localstack/data
      - CLEAR_TMP_FOLDER=0
      - DISABLE_CORS_CHECKS=1
    volumes:
      - ./volumes/.localstack:/tmp/localstack

  migrator:
    build:
      context: .
      dockerfile: ./Migrator/Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AWS__ServiceURL: http://localstack:4566
      AWS__AccessKey: test
      AWS__SecretKey: test
      AWS__BucketName: vending-machine
      ConnectionStrings__Postgres: Host=postgres;Database=vending_machine;Username=postgres;Password=postgres
  
  web-api:
    build:
      context: .
      dockerfile: ./WebApi/Dockerfile
    depends_on:
      migrator:
        condition: service_completed_successfully
    ports:
      - "7158:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AWS__ServiceURL: http://localstack:4566
      AWS__AccessKey: test
      AWS__SecretKey: test
      AWS__BucketName: vending-machine
      ConnectionStrings__Postgres: Host=postgres;Database=vending_machine;Username=postgres;Password=postgres
      JWT_KEY: wegeg3f43ggr44334rgg656W4j3nn53453tnnfew44f69erg8ew9
      JWT_ISSUER: vending_machine
      JWT_AUDIENCE: vending_machine

  frontend:
    ports:
      - "3000:80"
    build:
      context: ../client
      dockerfile: Dockerfile
    depends_on:
      web-api:
        condition: service_completed_successfully